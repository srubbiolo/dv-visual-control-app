{"version":3,"sources":["serviceWorker.js","app-state/reducers/index.js","app-state/constants/app-state.constants.js","app-state/store/index.js","app-state/actions/index.js","components/ControlsComponent/UpAndDownComponent/UpAndDown.component.jsx","components/DisplayComponent/Display.component.jsx","components/ControlsComponent/Controls.component.jsx","pages/AppLayout/AppLayout.jsx","index.js"],"names":["Boolean","window","location","hostname","match","initialState","allVideos","playStatus","volume","bright","contrast","rootReducer","state","action","type","Object","assign","concat","payload","newVol","toFixed","newBright","newCon","store","createStore","applyMiddleware","thunk","setVolume","setBrightness","setContrast","useStyles","makeStyles","increaseDecrease","fontSize","cursor","color","icon","UpAndDownComponent","iconText","incFunction","decFunction","classes","Box","Icon","className","onClick","DisplayComponent","sources","thumb","useSelector","videoRef","useRef","useEffect","current","style","filter","play","pause","key","width","height","poster","ref","src","theme","root","fontFamily","settingsContainer","textAlign","paddintTop0","paddingTop","paddintbottom0","paddingbottom","box","padding","spacing","formControl","margin","maxWidth","selectEmpty","marginTop","playIcon","pauseIcon","percentageP","movieSubtitle","marginLeft","appHeader","backgroundColor","borderRadius","marginBottom","ControlsComponent","dispatch","useDispatch","useState","selectedVideo","setSelectedVideo","togglePlayPuse","Grid","container","item","xs","Typography","variant","component","gutterBottom","sm","FormControl","InputLabel","id","Select","labelId","value","onChange","event","target","map","movie","index","MenuItem","title","Divider","orientation","flexItem","description","paddintBottom0","Applayout","a","fetch","response","json","categories","videos","ReactDOM","render","AppLayout","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.55569325.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { \r\n  DATA_LOADED,\r\n  PLAY_STATUS_CHANGE,\r\n  VOLUME_CHANGE,\r\n  BRIGHT_CHANGE,\r\n  CONTRAST_CHANGE } from '../constants/app-state.constants';\r\n\r\nconst initialState = {\r\n    allVideos: [],\r\n    playStatus: false,\r\n    volume: 0.5,\r\n    bright: 100,\r\n    contrast: 100\r\n};\r\n\r\n//TODO: set max and min values to constants\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === DATA_LOADED) {\r\n      return Object.assign({}, state, {\r\n          allVideos: state.allVideos.concat(action.payload)\r\n      });\r\n  }\r\n\r\n  if (action.type === PLAY_STATUS_CHANGE) {\r\n    return {...state, playStatus: !state.playStatus }\r\n  }\r\n\r\n  if (action.type === VOLUME_CHANGE) {\r\n    let newVol = state.volume;\r\n    if (action.payload) {\r\n      if (state.volume < 1) {\r\n        //Nasty JS behaviour on decimals\r\n        newVol = +(state.volume + 0.1).toFixed(12);\r\n      }\r\n    } else {\r\n      if (state.volume > 0) {\r\n        newVol = +(state.volume - 0.1).toFixed(12);\r\n      }\r\n    }\r\n    return {...state, volume: newVol}\r\n  }\r\n\r\n  if (action.type === BRIGHT_CHANGE) {\r\n    let newBright = state.bright;\r\n    if (action.payload) {\r\n      if (state.bright < 400) {\r\n        newBright = state.bright + 10\r\n      }\r\n    } else {\r\n      if (state.bright > 0) {\r\n        newBright = state.bright - 10\r\n      }\r\n    }\r\n    return {...state, bright: newBright}\r\n  }\r\n\r\n  if (action.type === CONTRAST_CHANGE) {\r\n    let newCon = state.contrast;\r\n    if (action.payload) {\r\n      if (state.contrast < 400) {\r\n        newCon = state.contrast + 10\r\n      }\r\n    } else {\r\n      if (state.contrast > 0) {\r\n        newCon = state.contrast - 10\r\n      }\r\n    }\r\n    return {...state, contrast: newCon}\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default rootReducer;","export const DATA_LOADED = 'DATA_LOADED';\r\nexport const PLAY_STATUS_CHANGE = 'PLAY_STATUS_CHANGE';\r\nexport const VOLUME_CHANGE = 'VOLUME_CHANGE';\r\nexport const BRIGHT_CHANGE = 'BRIGHT_CHANGE';\r\nexport const CONTRAST_CHANGE = 'CONTRAST_CHANGE';\r\nexport const API = 'https://api.jsonbin.io/b/5ef409df2406353b2e0c4068';\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;","import { \r\n        DATA_LOADED,\r\n        PLAY_STATUS_CHANGE,\r\n        VOLUME_CHANGE,\r\n        BRIGHT_CHANGE,\r\n        CONTRAST_CHANGE,\r\n        API } from '../constants/app-state.constants';\r\n\r\n\r\nexport function setPlayStatus() {\r\n  return { type: PLAY_STATUS_CHANGE }\r\n};\r\n\r\nexport function setVolume(payload) {\r\n  return { type: VOLUME_CHANGE, payload }\r\n};\r\n\r\nexport function setBrightness(payload) {\r\n  return { type: BRIGHT_CHANGE, payload }\r\n};\r\n\r\nexport function setContrast(payload) {\r\n  return { type: CONTRAST_CHANGE, payload }\r\n};\r\n\r\n//TODO: Make function a clean function, use param to set API otherwise anti-pattern here.\r\nexport function getData() {\r\n  return async function(dispatch) {\r\n    const response = await fetch(API);\r\n    const json = await response.json();\r\n    return dispatch({ type: DATA_LOADED, payload: json.categories[0].videos });\r\n  };\r\n}","import  React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Icon } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  increaseDecrease: {\r\n    fontSize: '1.5em',\r\n    cursor: 'pointer',\r\n    color: '#000'\r\n  },\r\n  icon: {\r\n    fontSize: '1.1em',\r\n    color: '#000'\r\n  }\r\n}));\r\n\r\nconst UpAndDownComponent = ({ iconText, incFunction, decFunction} ) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box>\r\n      <Icon className={classes.increaseDecrease} onClick={() => decFunction()}>remove_circle</Icon>\r\n      <Icon className={classes.icon}> {iconText}</Icon>\r\n      <Icon className={classes.increaseDecrease} onClick={() => incFunction()}>add_circle_outline</Icon>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default UpAndDownComponent;","import React, { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nconst DisplayComponent = ({ sources, thumb }) => {\r\n\r\n  const state = useSelector(state => state);\r\n  const videoRef = useRef(null);\r\n\r\n  const updateAllOptions = () => {\r\n    videoRef.current.volume = state.volume;\r\n    videoRef.current.style.filter = `brightness(${state.bright}%) contrast(${state.contrast}%)`;\r\n    if (state.playStatus) {\r\n      videoRef.current.play();\r\n    } else {\r\n      videoRef.current.pause();\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    updateAllOptions();\r\n  });\r\n\r\n  //Without the key it never refreshes otherwise only the son who is never born gets the update\r\n  //Another funny thing this comment under the return explodes on the prod build because of minify, probably babel error.\r\n  return (\r\n    <video key={thumb} width=\"80%\" height=\"80%\" poster={thumb} ref={videoRef}>\r\n      <source src={sources[0]} type=\"video/mp4\" />\r\n      Your browser does not support the video tag.\r\n    </video>\r\n  )\r\n}\r\n\r\nexport default DisplayComponent;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setVolume, setBrightness, setContrast, setPlayStatus } from '../../app-state/actions';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Box, InputLabel, MenuItem, FormControl, Select, Icon, Typography, Divider} from '@material-ui/core';\r\n\r\nimport UpAndDownComponent from './UpAndDownComponent/UpAndDown.component';\r\nimport DisplayComponent from '../DisplayComponent/Display.component';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    fontFamily: ['Roboto', 'sans-serif'],\r\n  },\r\n  settingsContainer: {\r\n    textAlign: 'center',    \r\n  },\r\n  paddintTop0: {\r\n    paddingTop: ' 0!important'\r\n  },\r\n  paddintbottom0: {\r\n    paddingbottom: ' 0!important'\r\n  },\r\n  box: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: '#000',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: '90%',\r\n    width: '100%'\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  playIcon: {\r\n    fontSize: '5em',\r\n    cursor: 'pointer',\r\n    color: '#55f12e'\r\n  },\r\n  pauseIcon: {\r\n    fontSize: '5em',\r\n    cursor: 'pointer',\r\n    color: '#d2351c'\r\n  },\r\n  percentageP: {\r\n    color: '#000',\r\n    fontSize: '0.7em',\r\n    marginTop: 0\r\n  },\r\n  movieSubtitle: {\r\n    marginLeft: 20\r\n  },\r\n  appHeader: {\r\n    backgroundColor: '#c8e6e6',\r\n    borderRadius: '0 0 5px 5px',\r\n    marginBottom: '20px'\r\n  }\r\n}));\r\n\r\nconst ControlsComponent = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const state = useSelector(state => state);\r\n  const allVideos = useSelector(state => state.allVideos);\r\n  const [ selectedVideo, setSelectedVideo ] = useState('');\r\n\r\n  const handleVideoChange = (event) => {\r\n    setSelectedVideo(event.target.value);\r\n  };\r\n\r\n  const increaseVolume = () => dispatch(setVolume(true))\r\n  const decreaseVolume = () => dispatch(setVolume(false))\r\n  const increaseBright = () => dispatch(setBrightness(true))\r\n  const decreaseBright = () => dispatch(setBrightness(false))\r\n  const increaseContrast = () => dispatch(setContrast(true))\r\n  const decreaseContrast = () => dispatch(setContrast(false))\r\n  const togglePlayPuse = () => dispatch(setPlayStatus())\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} className={classes.appHeader}>\r\n          <Box className={classes.box}>\r\n            <Typography variant=\"h3\" component=\"h2\" gutterBottom>\r\n              Deep Vision video player\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <Box className={classes.box}>\r\n            <FormControl variant=\"filled\" className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">Movie</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={selectedVideo}\r\n                onChange={handleVideoChange}\r\n              >\r\n              {allVideos.map( (movie, index) => (\r\n                <MenuItem key={index} value={movie}>{movie.title}</MenuItem>\r\n              ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </Grid>\r\n        <Divider orientation=\"vertical\" flexItem />\r\n        <Grid item xs={12} sm={7}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" component=\"h2\" className={classes.movieSubtitle} gutterBottom>\r\n                {selectedVideo.description}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.paddintBottom0}>\r\n              <Box className={classes.box}>\r\n                { (selectedVideo !== '') && <DisplayComponent {...selectedVideo}/>}\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.paddintTop0}>\r\n              { (selectedVideo !== '') && <Grid container className={classes.settingsContainer}>\r\n                <Grid item xs={3}>\r\n                  <Box className={classes.box}>\r\n                    <UpAndDownComponent \r\n                      iconText=\"brightness_medium\"\r\n                      incFunction={increaseBright}\r\n                      decFunction={decreaseBright}\r\n                    />\r\n                    <p className={classes.percentageP}>{`${state.bright}%`}</p>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Box className={classes.box}>\r\n                  <UpAndDownComponent \r\n                    iconText=\"exposure\"\r\n                    incFunction={increaseContrast}\r\n                    decFunction={decreaseContrast}\r\n                  />\r\n                  <p className={classes.percentageP}>{`${state.contrast}%`}</p>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Box className={classes.box} >\r\n                    { !state.playStatus && <Icon className={classes.playIcon} onClick={() => togglePlayPuse()}>play_circle_outline</Icon>}\r\n                    { state.playStatus && <Icon className={classes.pauseIcon} onClick={() => togglePlayPuse()}>pause_circle_outline</Icon>}\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Box className={classes.box}>\r\n                    <UpAndDownComponent \r\n                      iconText=\"volume_down\"\r\n                      incFunction={increaseVolume}\r\n                      decFunction={decreaseVolume}\r\n                    />\r\n                    <p className={classes.percentageP}>{`${state.volume * 100}%`}</p>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid> }\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ControlsComponent;","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getData } from '../../app-state/actions';\r\nimport ControlsComponent from '../../components/ControlsComponent/Controls.component';\r\n\r\nconst Applayout = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getData());\r\n  })\r\n  return <ControlsComponent />\r\n}\r\n\r\nexport default Applayout;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./app-state/store/index\";\nimport AppLayout from './pages/AppLayout/AppLayout';\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppLayout />\n  </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}